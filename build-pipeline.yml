trigger:
  branches:
    include:
      - main  # or your default branch

pool:
  vmImage: 'ubuntu-latest'  # or 'ubuntu-latest' if you're targeting Linux
variables:
  buildConfiguration: 'Release'
  azureSubscription: 'serv-conn-1'  # e.g., 'AzureServiceConnection'
  functionAppName: 'fa-dc-test-net8-inpro'          # e.g., 'my-funcapp-prod'
  packagePath: '$(System.DefaultWorkingDirectory)/publish_output'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish the Function App'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*FunctionApp2.csproj'  # adjust to your project name
    arguments: '--configuration $(buildConfiguration) --output $(packagePath)'
    zipAfterPublish: true

- task: AzureFunctionApp@2
  displayName: 'Deploy to Azure Function App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'functionApp'
    appName: '$(functionAppName)'
    package: '$(packagePath)/*.zip'
